openapi: 3.0.3
info:
  title: COTC Protocol API
  version: 1.0.0
  description: Chain-of-Thought Contract (COTC) Protocol API for validating AI-generated content
  contact:
    name: COTC Protocol Team
    email: cotc-support@enterprise.com
  license:
    name: Enterprise License
    url: https://cotc-protocol.com/license

servers:
- url: https://api.cotc-protocol.com/V1.0
  description: Production API Server
- url: https://staging-api.cotc-protocol.com/V1.0
  description: Staging API Server

security:
- ApiKeyAuth: []
- OAuth2: [read, write, admin]

paths:
  /validation/submit:
    post:
      summary: Submit content for COTC validation
      description: Submit AI-generated content for comprehensive validation through the COTC protocol
      tags:
        - Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '202':
          description: Validation request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '429':
          description: Rate limit exceeded
        '500':
          description: Internal server error

  /validation/{validationId}/status:
    get:
      summary: Get validation status
      description: Retrieve the current status of a validation request
      tags:
        - Validation
      parameters:
        - name: validationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Validation status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationStatus'
        '404':
          description: Validation not found

  /validation/{validationId}/result:
    get:
      summary: Get validation result
      description: Retrieve the complete validation result including all validator assessments
      tags:
        - Validation
      parameters:
        - name: validationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Validation result retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '202':
          description: Validation still in progress
        '404':
          description: Validation not found

  /contracts:
    get:
      summary: List available contracts
      description: Retrieve list of available COTC contracts
      tags:
        - Contracts
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum: [security, compliance, feature, domain, meta]
        - name: industry
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Contracts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractSummary'

    post:
      summary: Create new contract
      description: Create a new COTC validation contract
      tags:
        - Contracts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDefinition'
      responses:
        '201':
          description: Contract created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'

  /audit/trail/{validationId}:
    get:
      summary: Get cryptographic audit trail
      description: Retrieve the complete cryptographic audit trail for a validation
      tags:
        - Audit
      parameters:
        - name: validationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Audit trail retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail'

  /metrics/dashboard:
    get:
      summary: Get validation metrics
      description: Retrieve comprehensive validation metrics and KPIs
      tags:
        - Metrics
      parameters:
        - name: timeRange
          in: query
          schema:
            type: string
            enum: [1h, 24h, 7d, 30d, 90d]
        - name: contractType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsDashboard'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.cotc-protocol.com/oauth/token
          scopes:
            read: Read access to validation results
            write: Submit validation requests
            admin: Administrative access

  schemas:
    ValidationRequest:
      type: object
      required:
        - content
        - contractId
      properties:
        content:
          type: string
          description: Content to be validated
          maxLength: 1000000
        contractId:
          type: string
          description: COTC contract identifier
        metadata:
          type: object
          additionalProperties: true
          description: Additional context for validation
        priority:
          type: string
          enum: [low, medium, high, critical]
          default: medium
        requester:
          type: object
          properties:
            userId:
              type: string
            department:
              type: string
            businessJustification:
              type: string

    ValidationResponse:
      type: object
      properties:
        validationId:
          type: string
          format: uuid
        status:
          type: string
          enum: [submitted, queued, processing, completed, failed]
        estimatedCompletionTime:
          type: string
          format: date-time
        contractId:
          type: string
        priority:
          type: string

    ValidationStatus:
      type: object
      properties:
        validationId:
          type: string
          format: uuid
        status:
          type: string
          enum: [submitted, queued, processing, completed, failed, cancelled]
        progress:
          type: object
          properties:
            currentStage:
              type: string
            completedValidators:
              type: integer
            totalValidators:
              type: integer
            progressPercentage:
              type: number
              minimum: 0
              maximum: 100
        startTime:
          type: string
          format: date-time
        estimatedCompletionTime:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time

    ValidationResult:
      type: object
      properties:
        validationId:
          type: string
          format: uuid
        overallResult:
          type: string
          enum: [approved, rejected, requires_human_review, failed]
        confidence:
          type: number
          minimum: 0
          maximum: 1
        validatorResults:
          type: array
          items:
            $ref: '#/components/schemas/ValidatorResult'
        humanReviewRequired:
          type: boolean
        stakeholderNotifications:
          type: array
          items:
            $ref: '#/components/schemas/StakeholderNotification'
        auditTrailHash:
          type: string
          description: Cryptographic hash of the complete audit trail
        completionTime:
          type: string
          format: date-time
        totalProcessingTime:
          type: string
          description: Total time spent processing in ISO 8601 duration format

    ValidatorResult:
      type: object
      properties:
        validatorName:
          type: string
        validatorType:
          type: string
          enum: [compliance, security, domain, risk, meta]
        result:
          type: string
          enum: [approved, rejected, warning, requires_review]
        confidence:
          type: number
          minimum: 0
          maximum: 1
        findings:
          type: array
          items:
            $ref: '#/components/schemas/Finding'
        processingTime:
          type: string
          description: Processing time in ISO 8601 duration format
        metadata:
          type: object
          additionalProperties: true

    Finding:
      type: object
      properties:
        type:
          type: string
          enum: [violation, warning, recommendation, information]
        severity:
          type: string
          enum: [low, medium, high, critical]
        category:
          type: string
        description:
          type: string
        recommendation:
          type: string
        location:
          type: object
          properties:
            line:
              type: integer
            column:
              type: integer
            section:
              type: string
        references:
          type: array
          items:
            type: string

    StakeholderNotification:
      type: object
      properties:
        stakeholder:
          type: string
        notificationType:
          type: string
          enum: [approval_required, notification, escalation]
        message:
          type: string
        urgency:
          type: string
          enum: [low, medium, high, critical]
        deadline:
          type: string
          format: date-time
        contactMethod:
          type: string
          enum: [email, sms, slack, teams, webhook]

    ContractDefinition:
      type: object
      required:
        - contractId
        - governance
        - validation
      properties:
        contractId:
          type: string
        name:
          type: string
        description:
          type: string
        governance:
          type: object
          additionalProperties: true
        validation:
          type: object
          additionalProperties: true
        enhancedGovernance:
          type: object
          additionalProperties: true

    ContractSummary:
      type: object
      properties:
        contractId:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        industry:
          type: string
        complianceFrameworks:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date-time

    ContractResponse:
      type: object
      properties:
        contractId:
          type: string
        status:
          type: string
          enum: [created, validated, deployed, failed]
        validationResults:
          type: array
          items:
            type: string

    AuditTrail:
      type: object
      properties:
        validationId:
          type: string
          format: uuid
        blockchainHash:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AuditEntry'
        cryptographicSignature:
          type: string
        timestamp:
          type: string
          format: date-time

    AuditEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        actor:
          type: string
        action:
          type: string
        details:
          type: object
          additionalProperties: true
        hash:
          type: string
        previousHash:
          type: string

    MetricsDashboard:
      type: object
      properties:
        summary:
          type: object
          properties:
            totalValidations:
              type: integer
            successRate:
              type: number
            averageProcessingTime:
              type: string
            humanReviewRate:
              type: number
        reliability:
          type: object
          properties:
            accuracyRate:
              type: number
            falsePositiveRate:
              type: number
            failurePreventionRate:
              type: number
        compliance:
          type: object
          properties:
            complianceScore:
              type: number
            violationsPrevented:
              type: integer
            auditReadinessScore:
              type: number
        efficiency:
          type: object
          properties:
            reviewTimeReduction:
              type: number
            costSavings:
              type: number
            automationRate:
              type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
        requestId:
          type: string
